[
    {
        "id": "3e798eda.5c0eb2",
        "type": "tab",
        "label": "twitter_monitoring_flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "86293ff2.8f806",
        "type": "tab",
        "label": "github_flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6314e074.eb622",
        "type": "mongodb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "27017",
        "db": "twitter",
        "name": ""
    },
    {
        "id": "f9ac9978.27d0c8",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/tweets",
        "wholemsg": "false"
    },
    {
        "id": "6d1c4435.90cb1c",
        "type": "twitter-credentials",
        "z": "",
        "screen_name": "AcademicRevolt"
    },
    {
        "id": "25abaf21.1feff",
        "type": "Twitter-User-Timeline-config",
        "z": "",
        "name": "AcademicRevolt"
    },
    {
        "id": "2d381877.31e2d8",
        "type": "mongodb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "27017",
        "db": "twitter",
        "name": ""
    },
    {
        "id": "ae588ae0.f21b28",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/tweets",
        "wholemsg": "false"
    },
    {
        "id": "a307fdec.e9bf1",
        "type": "mongodb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "27017",
        "db": "twitter",
        "name": ""
    },
    {
        "id": "3dc3ef2.7f2ed1",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/tweets",
        "wholemsg": "false"
    },
    {
        "id": "e81b0d76.61ddd",
        "type": "github-credentials",
        "z": "",
        "name": "personal_access_token"
    },
    {
        "id": "d5d280f1.f77fd",
        "type": "inject",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 120,
        "wires": [
            [
                "cadeedfb.12d1a"
            ]
        ]
    },
    {
        "id": "cadeedfb.12d1a",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "debug_node",
        "active": false,
        "console": false,
        "complete": "true",
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "f32ca609.bf4cd8",
        "type": "http in",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "url": "/tweets",
        "method": "get",
        "swaggerDoc": "",
        "x": 230,
        "y": 700,
        "wires": [
            [
                "4c1fe565.b374fc"
            ]
        ]
    },
    {
        "id": "d4e0fb62.0d6e78",
        "type": "http response",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "x": 930,
        "y": 700,
        "wires": []
    },
    {
        "id": "30f78c97.5fd0c4",
        "type": "template",
        "z": "3e798eda.5c0eb2",
        "name": "template_node",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <!-- Latest compiled and minified CSS -->\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n        <script src=\"http://code.jquery.com/jquery-2.1.4.min.js\"></script>\n        <style>\n            body {\n                background-color: #2D2D30;\n                color: #C8C8C8 !important;\n            }\n        \n            .html-reporter {\n                color: whitesmoke !important;\n            }\n        \n            .html-reporter .symbol-summary li.passed:before {\n                color: #ABD03A !important;\n            }\n        \n            .html-reporter .symbol-summary li.failed:before {\n                color: #f73e3e !important;\n            }\n        \n            .html-reporter .bar.failed {\n                background-color: #f73e3e !important;\n            }\n        \n            .html-reporter .failures .spec-detail .description {\n                background-color: #f73e3e !important;\n            }\n        \n            .html-reporter .bar.menu a {\n                color: #EBF1A1 !important;\n            }\n        \n            .html-reporter .bar.skipped {\n                background-color: rgba(186, 186, 186, 0.38) !important;\n            }\n        \n            .html-reporter .symbol-summary li.disabled:before {\n                color: rgba(186, 186, 186, 0.38) !important;\n            }\n        \n            .html-reporter .bar.menu {\n                background-color: #333333;\n                color: whitesmoke;\n            }\n        \n            .html-reporter .result-message {\n                background-color: #333333 !important;\n                color: whitesmoke !important;\n            }\n        \n            .html-reporter .stack-trace {\n                background-color: #1E1E1E !important;\n                border: none !important;\n                color: #929191 !important;\n            }\n        \n            .html-reporter .suite a {\n                color: #D8D2D2 !important;\n                /*color: rgba(186, 186, 186, 0.38) !important;*/\n            }\n        \n            .html-reporter .suite li.disabled a {\n                color: #929191 !important;\n                /*color: rgba(186, 186, 186, 0.38) !important;*/\n            }\n        \n            .html-reporter .summary li.passed a {\n                color: #b4b97d !important;\n            }\n        \n            .html-reporter .summary li.failed a {\n                color: rgba(138, 41, 41, 0.88) !important;\n            }\n        </style>\n\n        \n        <style>\n            body {\n                \n                text-align: center;\n            }\n            ul {\n                text-align: left;  \n                width: 500px;\n                margin: auto;\n                list-style-type: none;\n            }\n            li {\n                border: 1px solid #999;\n                border-left-width:10px;\n                border-radius: 3px;\n                margin-bottom: 20px;\n                padding: 10px;\n            }\n            li.sentiment_positive {\n                border-left: 10px solid #69B369;\n            }\n            li.sentiment_negative {\n                border-left: 10px solid #E64444;\n            }\n            .tweet {\n                display: inline-block;\n                font-family: Helvetica;\n                width: 380px;\n                margin-left: 10px;\n            }\n            img {\n                width: 48px;\n                height: 48px;\n                border-radius: 5px;\n                vertical-align: top;\n            }\n            .user {\n                font-weight: bold; \n                min-height: 20px;\n            }\n            .bold {\n                font-weight: bold;\n            }\n        </style>\n        \n            <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"tweets\",\"ws/tweets\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var li = msg.data;\n                console.log(li);\n                // build the output from the topic and payload parts of the object\n                // line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('twitter-stream').innerHTML = li + document.getElementById('twitter-stream').innerHTML;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n        \n    </head>\n    <body  onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <div id=\"status\">unknown</div>\n        <div id=\"messages\"></div>\n<ul id=\"twitter-stream\">\n    {{#payload}}\n        <li class=\"sentiment_{{sentiment.text}}\">\n            <img src=\"{{tweet.user.profile_image_url}}\">\n            <span class=\"pull-right\">\n                <span class=\"badge badge-warning\">{{tweet.user.verified}}</span>\n            </span>\n            {{{tweet.source}}}\n            <div class=\"user\">\n                <span class=\"pull-right\">{{tweet.user.location}}</span>\n            </div>\n            <div class=\"tweet\">\n                <div class=\"user\">{{tweet.user.screen_name}}</div>\n                <div class=\"text\">{{tweet.retweeted_status.extended_tweet.full_text}}</div>\n                <div class=\"user\">{{tweet.created_at}}</div>\n            </div>\n        </li>\n    {{/payload}}\n</ul>\n        \n    </body>\n</html>",
        "x": 820,
        "y": 800,
        "wires": [
            [
                "d4e0fb62.0d6e78"
            ]
        ]
    },
    {
        "id": "efd8251e.b59588",
        "type": "sentiment",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "property": "payload",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "f6374150.0af16"
            ]
        ]
    },
    {
        "id": "f6374150.0af16",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "sentiment_analysis_fn",
        "func": "if(msg.sentiment.score > 0){\n    msg.sentiment.text = 'positive';\n} else if(msg.sentiment.score < 0) {\n    msg.sentiment.text = 'negative';\n}\nreturn msg;\n    ",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 180,
        "wires": [
            [
                "cf2d2c7f.68f9b"
            ]
        ]
    },
    {
        "id": "4c1fe565.b374fc",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "sort_and_limit_fn",
        "func": "msg.sort = {\"tweet.id\": -1};\nmsg.limit = 5;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 800,
        "wires": [
            [
                "86bb0610.ecc398"
            ]
        ]
    },
    {
        "id": "17fea973.ce5187",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "active": true,
        "console": false,
        "complete": "true",
        "x": 790,
        "y": 620,
        "wires": []
    },
    {
        "id": "d61e3211.6624a",
        "type": "switch",
        "z": "3e798eda.5c0eb2",
        "name": "is_user_verified",
        "property": "tweet.user.verified",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 900,
        "y": 300,
        "wires": [
            [
                "a4941fc9.fde69",
                "7f289c38.1e7624"
            ],
            [
                "268b54de.c9a30c",
                "7f289c38.1e7624"
            ],
            [
                "93d44064.e113f"
            ]
        ]
    },
    {
        "id": "268b54de.c9a30c",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "user_not_verified_debug_node",
        "active": true,
        "console": false,
        "complete": "true",
        "x": 1210,
        "y": 240,
        "wires": []
    },
    {
        "id": "29de86f4.4dd53a",
        "type": "catch",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "scope": null,
        "x": 220,
        "y": 500,
        "wires": [
            [
                "ea2a92c8.59cd6"
            ]
        ]
    },
    {
        "id": "ea2a92c8.59cd6",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "catch_all_debug",
        "active": true,
        "console": false,
        "complete": "true",
        "x": 510,
        "y": 500,
        "wires": []
    },
    {
        "id": "a4941fc9.fde69",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "user_is_verified_debug_node",
        "active": true,
        "console": false,
        "complete": "true",
        "x": 1200,
        "y": 140,
        "wires": []
    },
    {
        "id": "93d44064.e113f",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "otherwise_debug_node",
        "active": true,
        "console": false,
        "complete": "true",
        "x": 1190,
        "y": 400,
        "wires": []
    },
    {
        "id": "f1d82a52.c4fb68",
        "type": "file",
        "z": "3e798eda.5c0eb2",
        "name": "filepath",
        "filename": "/users/chasegibbons/repos/nodered/.vscode/database.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1440,
        "y": 300,
        "wires": []
    },
    {
        "id": "7f289c38.1e7624",
        "type": "mongodb out",
        "z": "3e798eda.5c0eb2",
        "service": "_ext_",
        "mongodb": "a307fdec.e9bf1",
        "name": "",
        "collection": "tweets",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1510,
        "y": 260,
        "wires": []
    },
    {
        "id": "86bb0610.ecc398",
        "type": "mongodb in",
        "z": "3e798eda.5c0eb2",
        "service": "_ext_",
        "mongodb": "a307fdec.e9bf1",
        "name": "",
        "collection": "tweets",
        "operation": "find",
        "x": 620.5,
        "y": 698,
        "wires": [
            [
                "17fea973.ce5187",
                "30f78c97.5fd0c4"
            ]
        ]
    },
    {
        "id": "32c8684b.bd72b8",
        "type": "websocket in",
        "z": "3e798eda.5c0eb2",
        "name": "websocket_in_node",
        "server": "3dc3ef2.7f2ed1",
        "client": "",
        "x": 930,
        "y": 520,
        "wires": [
            [
                "d2418c68.2e8e4"
            ]
        ]
    },
    {
        "id": "d2418c68.2e8e4",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "websocket_debug_node",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1210,
        "y": 600,
        "wires": []
    },
    {
        "id": "d12a0262.6dceb",
        "type": "websocket out",
        "z": "3e798eda.5c0eb2",
        "name": "websocket_out_node",
        "server": "3dc3ef2.7f2ed1",
        "client": "",
        "x": 940,
        "y": 440,
        "wires": []
    },
    {
        "id": "bbf12556.10d3c8",
        "type": "template",
        "z": "3e798eda.5c0eb2",
        "name": "partial_template_node",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    {{#payload}}\n        <li class=\"sentiment_{{sentiment.text}}\">\n            <img src=\"{{tweet.user.profile_image_url}}\">\n            <span class=\"pull-right\">\n                <span class=\"badge badge-warning\">{{tweet.user.verified}}</span>\n            </span>\n            {{{tweet.source}}}\n            <div class=\"user\">\n                <span class=\"pull-right\">{{tweet.user.location}}</span>\n            </div>\n            <div class=\"tweet\">\n                <div class=\"user\">{{tweet.user.screen_name}}</div>\n                <div class=\"text\">{{tweet.retweeted_status.extended_tweet.full_text}}</div>\n                <div class=\"user\">{{tweet.created_at}}</div>\n            </div>\n        </li>\n    {{/payload}}",
        "x": 834,
        "y": 373,
        "wires": [
            [
                "d12a0262.6dceb"
            ]
        ]
    },
    {
        "id": "48a9fe3f.23c5",
        "type": "twitter in",
        "z": "3e798eda.5c0eb2",
        "twitter": "6d1c4435.90cb1c",
        "tags": "#deepstate",
        "user": "false",
        "name": "",
        "topic": "tweets",
        "inputs": 0,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "cadeedfb.12d1a",
                "f979c6eb.c652f8"
            ]
        ]
    },
    {
        "id": "cf2d2c7f.68f9b",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "retweet_analysis_fn",
        "func": "if(!msg.tweet.retweeted_status){\n    msg.is_retweet = false;\n} else if(msg.tweet.retweeted_status) {\n    msg.is_retweet = true;\n}\nreturn msg;\n    ",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 300,
        "wires": [
            [
                "d61e3211.6624a",
                "bbf12556.10d3c8"
            ]
        ]
    },
    {
        "id": "f979c6eb.c652f8",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "user_screen_name_mapping_fn",
        "func": "\nif(msg.tweet && msg.tweet.user && msg.tweet.user.screen_name){\n//   msg.payload = {\n//       screenname: msg.tweet.user.screen_name\n//   }\n   msg.screen_name = msg.tweet.user.screen_name;\n   msg.search_screen_name = '@' + msg.tweet.user.screen_name;\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "efd8251e.b59588"
            ]
        ]
    },
    {
        "id": "49ac1bcf.0fee54",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 590,
        "y": 440,
        "wires": []
    },
    {
        "id": "3229c9cd.3b2436",
        "type": "http request",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://osome-botometer.p.mashape.com/2/check_account",
        "tls": "",
        "x": 450,
        "y": 400,
        "wires": [
            [
                "49ac1bcf.0fee54"
            ]
        ]
    },
    {
        "id": "f8d2c5ac.5c68c8",
        "type": "inject",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 420,
        "wires": [
            [
                "fb126b68.f36b48"
            ]
        ]
    },
    {
        "id": "fb126b68.f36b48",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "msg.payload setter",
        "func": "msg.payload = '@AcademicRevolt';\nmsg.headers = {\n    'X-Mashape-Key': 'vYOUpOV3mjmshSTu9BjinMj71y8Fp1rNVL9jsngpuUHCVyVEdD',\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n};\nmsg.payload = {\"user\":{\"id\":\"1234567890\",\"screen_name\":\"IUNetSci\",\"...\":\"...\"},\"timeline\":[{\"id\":1234567890,\"text\":\"@Botometer is so cool!\",\"...\":\"...\"},\"...\"],\"mentions\":[{\"id\":9876543210,\"text\":\"@TruthyAtIndiana is also cool!\",\"...\":\"...\"},\"...\"]};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "3229c9cd.3b2436"
            ]
        ]
    },
    {
        "id": "12934fa4.50d4e",
        "type": "twitter out",
        "z": "3e798eda.5c0eb2",
        "twitter": "6d1c4435.90cb1c",
        "name": "Tweet",
        "x": 2350,
        "y": 380,
        "wires": []
    },
    {
        "id": "c6c5155c.fc1838",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "tweet_out_mapping_fn",
        "func": "if(msg.payload && !msg.payload.length){\n    msg.payload = '@StattoBot ' + msg.screen_name;\n    return msg;\n} else {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1900,
        "y": 380,
        "wires": [
            [
                "58648853.b54178"
            ]
        ]
    },
    {
        "id": "7d529289.f143bc",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "tweet_out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 2280,
        "y": 320,
        "wires": []
    },
    {
        "id": "65b4a4a3.7ac78c",
        "type": "mongodb in",
        "z": "3e798eda.5c0eb2",
        "service": "_ext_",
        "mongodb": "a307fdec.e9bf1",
        "name": "",
        "collection": "screen_names",
        "operation": "find",
        "x": 1590,
        "y": 360,
        "wires": [
            [
                "6717e8f8.3171e8",
                "c6c5155c.fc1838"
            ]
        ]
    },
    {
        "id": "4b3f32be.6a782c",
        "type": "mongodb out",
        "z": "3e798eda.5c0eb2",
        "service": "_ext_",
        "mongodb": "a307fdec.e9bf1",
        "name": "",
        "collection": "screen_names",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2430,
        "y": 480,
        "wires": []
    },
    {
        "id": "31abd658.7b81ca",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "screen_names_mapping_fn",
        "func": "if(!msg.screen_name) \nreturn null;\nmsg.payload = { \"payload\": \"@StattoBot \" + msg.screen_name };\nmsg.limit = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 340,
        "wires": [
            [
                "65b4a4a3.7ac78c"
            ]
        ]
    },
    {
        "id": "6717e8f8.3171e8",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "is found",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1800,
        "y": 260,
        "wires": []
    },
    {
        "id": "6aa0715d.7f841",
        "type": "function",
        "z": "3e798eda.5c0eb2",
        "name": "screen_names_mapping_fn",
        "func": "\nmsg.payload = { \"payload\": \"@StattoBot paulv937\" };\nmsg.limit = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 520,
        "wires": [
            [
                "e419c24.474c34"
            ]
        ]
    },
    {
        "id": "e419c24.474c34",
        "type": "mongodb in",
        "z": "3e798eda.5c0eb2",
        "service": "_ext_",
        "mongodb": "a307fdec.e9bf1",
        "name": "",
        "collection": "screen_names",
        "operation": "find",
        "x": 1810,
        "y": 540,
        "wires": [
            [
                "2ad46b34.611194"
            ]
        ]
    },
    {
        "id": "2ad46b34.611194",
        "type": "debug",
        "z": "3e798eda.5c0eb2",
        "name": "is found2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 2060,
        "y": 640,
        "wires": []
    },
    {
        "id": "35f9d54e.d0753a",
        "type": "inject",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1260,
        "y": 500,
        "wires": [
            [
                "6aa0715d.7f841"
            ]
        ]
    },
    {
        "id": "58648853.b54178",
        "type": "delay",
        "z": "3e798eda.5c0eb2",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2080,
        "y": 440,
        "wires": [
            [
                "4b3f32be.6a782c",
                "12934fa4.50d4e",
                "7d529289.f143bc"
            ]
        ]
    },
    {
        "id": "40c89121.acade",
        "type": "github-repo",
        "z": "86293ff2.8f806",
        "github": "e81b0d76.61ddd",
        "name": "",
        "username": "RentDynamics",
        "usernameType": "str",
        "repository": "contact-center-flex",
        "repositoryType": "str",
        "action": "show",
        "branch": "master",
        "branchType": "str",
        "path": "",
        "pathType": "str",
        "pathto": "",
        "pathtoType": "str",
        "contents": "payload",
        "contentsType": "msg",
        "outputs": "1",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "5e771cee.e2c334"
            ]
        ]
    },
    {
        "id": "58875c94.77dce4",
        "type": "github-user",
        "z": "86293ff2.8f806",
        "github": "e81b0d76.61ddd",
        "name": "",
        "action": "notifications",
        "outputs": "1",
        "options": "{}",
        "optionsType": "json",
        "username": "AcademicRevolt",
        "usernameType": "str",
        "orgname": "",
        "orgnameType": "str",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "5e771cee.e2c334"
            ]
        ]
    },
    {
        "id": "d627f68a.086498",
        "type": "inject",
        "z": "86293ff2.8f806",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "40c89121.acade",
                "58875c94.77dce4",
                "ac6b3652.37dd08"
            ]
        ]
    },
    {
        "id": "5e771cee.e2c334",
        "type": "debug",
        "z": "86293ff2.8f806",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "f321fc66.302e8",
        "type": "http request",
        "z": "86293ff2.8f806",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "https://api.github.com/users/chase2981/events",
        "tls": "",
        "x": 380,
        "y": 540,
        "wires": [
            [
                "5e771cee.e2c334"
            ]
        ]
    },
    {
        "id": "ac6b3652.37dd08",
        "type": "function",
        "z": "86293ff2.8f806",
        "name": "msg.payload setter",
        "func": "// msg.payload = '@AcademicRevolt';\nmsg.headers = {\n    'Authorization': 'token c5052d2d3878015764e0e8a4e749f9b4c5e81bfd',\n    'Content-Type': 'application/vnd.github.v3+json',\n    'User-Agent': 'node-red'\n    // 'Accept': 'application/json'\n};\n// msg.payload = {\"user\":{\"id\":\"1234567890\",\"screen_name\":\"IUNetSci\",\"...\":\"...\"},\"timeline\":[{\"id\":1234567890,\"text\":\"@Botometer is so cool!\",\"...\":\"...\"},\"...\"],\"mentions\":[{\"id\":9876543210,\"text\":\"@TruthyAtIndiana is also cool!\",\"...\":\"...\"},\"...\"]};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 480,
        "wires": [
            [
                "f321fc66.302e8"
            ]
        ]
    }
]